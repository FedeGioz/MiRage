/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.federicogiordano.mirage.models

import com.federicogiordano.mirage.models.Errors
import com.federicogiordano.mirage.models.HookStatus
import com.federicogiordano.mirage.models.Position
import com.federicogiordano.mirage.models.UserPrompt
import com.federicogiordano.mirage.models.Velocity

import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param batteryPercentage The current charge percentage of the battery
 * @param batteryTimeRemaining The approximate time remaining on the battery during normal operation of the robot
 * @param distanceToNextTarget The distance to the next target of the robot
 * @param errors The list of actions executed as part of the mission
 * @param footprint The current footprint of the robot
 * @param hookStatus 
 * @param joystickLowSpeedModeEnabled 
 * @param joystickWebSessionId The id of the web user that has control over the joystick
 * @param mapId The id of the current map the robot recides in
 * @param missionQueueId The id of the current job the robot executes
 * @param missionQueueUrl The url to the active mission in queue
 * @param missionText Status message from mission controller
 * @param modeId The id of the current mode of the robot
 * @param modeKeyState A textual description of the position of the mode key
 * @param modeText A textual description of the current state of the robot
 * @param moved 
 * @param position 
 * @param robotModel The model of the robot
 * @param robotName The name of the robot
 * @param safetySystemMuted 
 * @param serialNumber The model of the robot
 * @param sessionId The id of the session the robot recides in
 * @param stateId The id of the current state of the robot
 * @param stateText A textual description of the current state of the robot
 * @param unloadedMapChanges 
 * @param uptime The uptime of the robot
 * @param userPrompt 
 * @param velocity 
 */
@Serializable@Serializable

data class GetStatus (

    /* The current charge percentage of the battery */
    @SerialName(value = "battery_percentage") val batteryPercentage: kotlin.Float? = null,

    /* The approximate time remaining on the battery during normal operation of the robot */
    @SerialName(value = "battery_time_remaining") val batteryTimeRemaining: kotlin.Long? = null,

    /* The distance to the next target of the robot */
    @SerialName(value = "distance_to_next_target") val distanceToNextTarget: kotlin.Float? = null,

    /* The list of actions executed as part of the mission */
    @SerialName(value = "errors") val errors: kotlin.collections.List<Errors>? = null,

    /* The current footprint of the robot */
    @SerialName(value = "footprint") val footprint: kotlin.String? = null,

    @SerialName(value = "hook_status") val hookStatus: HookStatus? = null,

    @SerialName(value = "joystick_low_speed_mode_enabled") val joystickLowSpeedModeEnabled: kotlin.Boolean? = null,

    /* The id of the web user that has control over the joystick */
    @SerialName(value = "joystick_web_session_id") val joystickWebSessionId: kotlin.String? = null,

    /* The id of the current map the robot recides in */
    @SerialName(value = "map_id") val mapId: kotlin.String? = null,

    /* The id of the current job the robot executes */
    @SerialName(value = "mission_queue_id") val missionQueueId: kotlin.Long? = null,

    /* The url to the active mission in queue */
    @SerialName(value = "mission_queue_url") val missionQueueUrl: kotlin.String? = null,

    /* Status message from mission controller */
    @SerialName(value = "mission_text") val missionText: kotlin.String? = null,

    /* The id of the current mode of the robot */
    @SerialName(value = "mode_id") val modeId: kotlin.Long? = null,

    /* A textual description of the position of the mode key */
    @SerialName(value = "mode_key_state") val modeKeyState: kotlin.String? = null,

    /* A textual description of the current state of the robot */
    @SerialName(value = "mode_text") val modeText: kotlin.String? = null,

    @SerialName(value = "moved") val moved: kotlin.Float? = null,

    @SerialName(value = "position") val position: Position? = null,

    /* The model of the robot */
    @SerialName(value = "robot_model") val robotModel: kotlin.String? = null,

    /* The name of the robot */
    @SerialName(value = "robot_name") val robotName: kotlin.String? = null,

    @SerialName(value = "safety_system_muted") val safetySystemMuted: kotlin.Boolean? = null,

    /* The model of the robot */
    @SerialName(value = "serial_number") val serialNumber: kotlin.String? = null,

    /* The id of the session the robot recides in */
    @SerialName(value = "session_id") val sessionId: kotlin.String? = null,

    /* The id of the current state of the robot */
    @SerialName(value = "state_id") val stateId: kotlin.Long? = null,

    /* A textual description of the current state of the robot */
    @SerialName(value = "state_text") val stateText: kotlin.String? = null,

    @SerialName(value = "unloaded_map_changes") val unloadedMapChanges: kotlin.Boolean? = null,

    /* The uptime of the robot */
    @SerialName(value = "uptime") val uptime: kotlin.Long? = null,

    @SerialName(value = "user_prompt") val userPrompt: UserPrompt? = null,

    @SerialName(value = "velocity") val velocity: Velocity? = null

)

