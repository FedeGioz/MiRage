/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.federicogiordano.mirage.models


import kotlinx.serialization.*
import kotlinx.serialization.descriptors.*
import kotlinx.serialization.encoding.*

/**
 * 
 *
 * @param createdBy The url to the description of the type of this position
 * @param createdById The global id of the user who created this entry
 * @param driveHeight The height of the hook when driving with carts of this cart calibration
 * @param entryHeight The entry height of the hook for the cart calibration
 * @param guid The global id unique across robots that identifies this cart calibration
 * @param lockHeight The lock height of the hook for the cart calibration
 * @param name The name of the cart calibration
 * @param qw The qw quaternion of the cart calibration
 * @param qx The qx quaternion of the cart calibration
 * @param qy The qy quaternion of the cart calibration
 * @param qz The qz quaternion of the cart calibration
 * @param standard If the cart calibration is standard or not
 * @param x The offset in the x-coordinate of the cart calibration
 * @param y The offset in the y-coordinate of the cart calibration
 * @param z The offset in the z-coordinate of the cart calibration
 */
@Serializable@Serializable

data class GetCartCalibration (

    /* The url to the description of the type of this position */
    @SerialName(value = "created_by") val createdBy: kotlin.String? = null,

    /* The global id of the user who created this entry */
    @SerialName(value = "created_by_id") val createdById: kotlin.String? = null,

    /* The height of the hook when driving with carts of this cart calibration */
    @SerialName(value = "drive_height") val driveHeight: kotlin.Long? = null,

    /* The entry height of the hook for the cart calibration */
    @SerialName(value = "entry_height") val entryHeight: kotlin.Long? = null,

    /* The global id unique across robots that identifies this cart calibration */
    @SerialName(value = "guid") val guid: kotlin.String? = null,

    /* The lock height of the hook for the cart calibration */
    @SerialName(value = "lock_height") val lockHeight: kotlin.Long? = null,

    /* The name of the cart calibration */
    @SerialName(value = "name") val name: kotlin.String? = null,

    /* The qw quaternion of the cart calibration */
    @SerialName(value = "qw") val qw: kotlin.Float? = null,

    /* The qx quaternion of the cart calibration */
    @SerialName(value = "qx") val qx: kotlin.Float? = null,

    /* The qy quaternion of the cart calibration */
    @SerialName(value = "qy") val qy: kotlin.Float? = null,

    /* The qz quaternion of the cart calibration */
    @SerialName(value = "qz") val qz: kotlin.Float? = null,

    /* If the cart calibration is standard or not */
    @SerialName(value = "standard") val standard: kotlin.Boolean? = null,

    /* The offset in the x-coordinate of the cart calibration */
    @SerialName(value = "x") val x: kotlin.Float? = null,

    /* The offset in the y-coordinate of the cart calibration */
    @SerialName(value = "y") val y: kotlin.Float? = null,

    /* The offset in the z-coordinate of the cart calibration */
    @SerialName(value = "z") val z: kotlin.Float? = null

)

